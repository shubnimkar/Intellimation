pipeline {
    agent any
    
    environment {
        PASSWORD = credentials('windows-key')
        WINDOWS_HOST = '172.32.0.141' // Replace this with your Windows machine IP or hostname
        WINDOWS_USERNAME = 'dc.support' // Replace this with your Windows username
        SCRIPT_START = "\\\\imslprad02\\backup\\Area51\\ftpdownload\\Jenkins\\Application_deployment\\Application_folder\\starthttpd.bat" // Replace with script location
        SCRIPT_STOP = "\\\\imslprad02\\backup\\Area51\\ftpdownload\\Jenkins\\Application_deployment\\Application_folder\\stophttpd.bat" // Replace with script location
        SCRIPT_STATUS = "\\\\imslprad02\\backup\\Area51\\ftpdownload\\Jenkins\\Application_deployment\\Application_folder\\status.bat" // Replace with script location
        SCRIPT_SEG = "\\\\imslprad02\\backup\\Area51\\ftpdownload\\Jenkins\\Application_deployment\\Backups\\segregation.bat"
        SHARED_FOLDER = "\\\\imslprad02\\backup\\Area51\\ftpdownload\\Jenkins\\Application_deployment" // Location of shared folder
        NEXUS_URL = "https://github.com/shubnimkar/Intellimation/archive/refs/heads/master.zip" //Your Nexus URL
    }

    stages{
        
        stage('Clean Workspace'){
            steps{
                cleanWs()
            }
        }
        
        stage('Copy sshpass'){
            steps{
                sh "cp /var/jenkins_home/sshpass /var/jenkins_home/workspace/Application-Rollback"
            }
        }
        
        stage('Status of Service') {
            steps {
                script {
                     sh" ./sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $WINDOWS_USERNAME@$WINDOWS_HOST 'cmd /c $SCRIPT_STATUS'"
      
                }
            }
        }
        
        
        stage('Stop Service') {
            steps {
                script {
                     sh" ./sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $WINDOWS_USERNAME@$WINDOWS_HOST 'cmd /c $SCRIPT_STOP'"
      
                }
            }
        }
        
        stage('Restoring to Application folder'){
            steps{
                script{
                  def outputFromFirstCommand = sh(script: " ./sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $WINDOWS_USERNAME@$WINDOWS_HOST 'cmd /c $SCRIPT_SEG'", returnStdout: true).trim()
                  sh "./sshpass -p ${PASSWORD} ssh ${WINDOWS_USERNAME}@${WINDOWS_HOST} 'net use Z: $SHARED_FOLDER && copy Z:\\Backups\\${outputFromFirstCommand} Z:\\Application_folder  && Z: /delete ' "

                }
            }
        }
        
        stage('Start Service') {
            steps {
                script {
                     sh" ./sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $WINDOWS_USERNAME@$WINDOWS_HOST 'cmd /c $SCRIPT_START'"
      
                }
            }
        }
        
        stage('Status ') {
            steps {
                script {
                     sh" ./sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $WINDOWS_USERNAME@$WINDOWS_HOST 'cmd /c $SCRIPT_STATUS'"
      
                }
            }
        }
    
    }
}